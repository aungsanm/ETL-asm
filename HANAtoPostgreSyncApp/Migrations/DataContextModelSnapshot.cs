// <auto-generated />
using System;
using HANAtoPostgreSyncApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HANAtoPostgreSyncApp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.AIT1", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<decimal?>("AddPrice1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AddPrice2")
                        .HasColumnType("numeric");

                    b.Property<int?>("BasePLNum")
                        .HasColumnType("integer");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Currency1")
                        .HasColumnType("text");

                    b.Property<string>("Currency2")
                        .HasColumnType("text");

                    b.Property<decimal?>("Factor")
                        .HasColumnType("numeric");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("LogInstanc")
                        .HasColumnType("integer");

                    b.Property<string>("ObjType")
                        .HasColumnType("text");

                    b.Property<string>("Ovrwrite1")
                        .HasColumnType("text");

                    b.Property<string>("Ovrwrite2")
                        .HasColumnType("text");

                    b.Property<string>("Ovrwritten")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("PriceList")
                        .HasColumnType("integer");

                    b.Property<string>("PriceType")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AIT1", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.AITM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<decimal?>("AssVal4WTR")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("AvgPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BHeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BHeight2")
                        .HasColumnType("numeric");

                    b.Property<int?>("BHght1Unit")
                        .HasColumnType("integer");

                    b.Property<int?>("BLen1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BLength1")
                        .HasColumnType("numeric");

                    b.Property<int?>("BVolUnit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BVolume")
                        .HasColumnType("numeric");

                    b.Property<int?>("BWdth1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BWeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BWeight2")
                        .HasColumnType("numeric");

                    b.Property<int?>("BWght1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BWidth1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BWidth2")
                        .HasColumnType("numeric");

                    b.Property<string>("BeverGrpC")
                        .HasColumnType("text");

                    b.Property<int?>("BeverTM")
                        .HasColumnType("integer");

                    b.Property<string>("BeverTblC")
                        .HasColumnType("text");

                    b.Property<decimal?>("Blength2")
                        .HasColumnType("numeric");

                    b.Property<string>("BuyUnitMsr")
                        .HasColumnType("text");

                    b.Property<string>("ByWh")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CntUnitMsr")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<int?>("CommClass")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<int?>("CstGrpCode")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<string>("Deleted")
                        .HasColumnType("text");

                    b.Property<string>("DfltWH")
                        .HasColumnType("text");

                    b.Property<int?>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ExcFixAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExcRate")
                        .HasColumnType("numeric");

                    b.Property<int?>("FirmCode")
                        .HasColumnType("integer");

                    b.Property<string>("FrgnName")
                        .HasColumnType("text");

                    b.Property<string>("FrozenComm")
                        .HasColumnType("text");

                    b.Property<int?>("FuelCode")
                        .HasColumnType("integer");

                    b.Property<string>("GLMethod")
                        .HasColumnType("text");

                    b.Property<int?>("INUoMEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("IUoMEntry")
                        .HasColumnType("integer");

                    b.Property<decimal?>("IWeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IWeight2")
                        .HasColumnType("numeric");

                    b.Property<int?>("IWght1Unit")
                        .HasColumnType("integer");

                    b.Property<string>("InvntItem")
                        .HasColumnType("text");

                    b.Property<string>("InvntryUom")
                        .HasColumnType("text");

                    b.Property<decimal?>("IsCommited")
                        .HasColumnType("numeric");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<int?>("ItmsGrpCod")
                        .HasColumnType("integer");

                    b.Property<string>("LastPurCur")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastPurDat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("LastPurPrc")
                        .HasColumnType("numeric");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("integer");

                    b.Property<int>("LogInstanc")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LstEvlDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("LstEvlPric")
                        .HasColumnType("numeric");

                    b.Property<string>("NoDiscount")
                        .HasColumnType("text");

                    b.Property<decimal?>("NumInBuy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumInSale")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OnHand")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OnHldPert")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OnOrder")
                        .HasColumnType("numeric");

                    b.Property<int?>("PUoMEntry")
                        .HasColumnType("integer");

                    b.Property<string>("PicturName")
                        .HasColumnType("text");

                    b.Property<string>("PlaningSys")
                        .HasColumnType("text");

                    b.Property<string>("PrchseItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("PrdStdCst")
                        .HasColumnType("numeric");

                    b.Property<int?>("PriceUnit")
                        .HasColumnType("integer");

                    b.Property<string>("ProductSrc")
                        .HasColumnType("text");

                    b.Property<string>("PurPackMsr")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup1")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup10")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup11")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup12")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup13")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup14")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup15")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup16")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup17")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup18")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup19")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup2")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup20")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup21")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup22")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup23")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup24")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup25")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup26")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup27")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup28")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup29")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup3")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup30")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup31")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup32")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup33")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup34")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup35")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup36")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup37")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup38")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup39")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup4")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup40")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup41")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup42")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup43")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup44")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup45")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup46")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup47")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup48")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup49")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup5")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup50")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup51")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup52")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup53")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup54")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup55")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup56")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup57")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup58")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup59")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup6")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup60")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup61")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup62")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup63")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup64")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup7")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup8")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup9")
                        .HasColumnType("text");

                    b.Property<decimal?>("SHeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SHeight2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SLength1")
                        .HasColumnType("numeric");

                    b.Property<int?>("SUoMEntry")
                        .HasColumnType("integer");

                    b.Property<string>("SWW")
                        .HasColumnType("text");

                    b.Property<decimal?>("SWeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SWeight2")
                        .HasColumnType("numeric");

                    b.Property<int?>("SWght1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SWidth1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SWidth2")
                        .HasColumnType("numeric");

                    b.Property<string>("SalPackMsr")
                        .HasColumnType("text");

                    b.Property<string>("SalUnitMsr")
                        .HasColumnType("text");

                    b.Property<string>("SellItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("Slength2")
                        .HasColumnType("numeric");

                    b.Property<string>("SouVirAsst")
                        .HasColumnType("text");

                    b.Property<int?>("StdItemId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StockValue")
                        .HasColumnType("numeric");

                    b.Property<string>("SuppCatNum")
                        .HasColumnType("text");

                    b.Property<string>("TreeType")
                        .HasColumnType("text");

                    b.Property<string>("U_2ndNewItemFees")
                        .HasColumnType("text");

                    b.Property<string>("U_BUYER")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_CUOMC")
                        .HasColumnType("numeric");

                    b.Property<string>("U_CUOMN")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ISDT")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ISTO")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_MDFD")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_NSPO")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_REIT")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_SLDC")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TIPR")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ZVIT")
                        .HasColumnType("text");

                    b.Property<string>("U_Expired")
                        .HasColumnType("text");

                    b.Property<string>("U_MeetingInactiveDate")
                        .HasColumnType("text");

                    b.Property<string>("U_POTYPE")
                        .HasColumnType("text");

                    b.Property<string>("U_PreferBP")
                        .HasColumnType("text");

                    b.Property<string>("U_Purchase")
                        .HasColumnType("text");

                    b.Property<string>("U_ReasonCodeDaily")
                        .HasColumnType("text");

                    b.Property<string>("U_ReasonCodeItem")
                        .HasColumnType("text");

                    b.Property<string>("U_RefItemCode")
                        .HasColumnType("text");

                    b.Property<string>("U_Remak7")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark1")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark10")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark2")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark3")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark31")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark4")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark5")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark6")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark7")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark8")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark9")
                        .HasColumnType("text");

                    b.Property<string>("U_SPAREV")
                        .HasColumnType("text");

                    b.Property<string>("U_SpecialItem")
                        .HasColumnType("text");

                    b.Property<string>("U_StockUOM")
                        .HasColumnType("text");

                    b.Property<string>("U_Type")
                        .HasColumnType("text");

                    b.Property<string>("U_UOM")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_UOMCo")
                        .HasColumnType("numeric");

                    b.Property<string>("U_bpkind")
                        .HasColumnType("text");

                    b.Property<string>("U_foodpanda")
                        .HasColumnType("text");

                    b.Property<string>("U_pomaxday")
                        .HasColumnType("text");

                    b.Property<string>("U_pominday")
                        .HasColumnType("text");

                    b.Property<string>("U_poschedule")
                        .HasColumnType("text");

                    b.Property<string>("U_ramark31")
                        .HasColumnType("text");

                    b.Property<string>("U_remark11")
                        .HasColumnType("text");

                    b.Property<string>("U_remark12")
                        .HasColumnType("text");

                    b.Property<string>("U_remark13")
                        .HasColumnType("text");

                    b.Property<string>("U_remark14")
                        .HasColumnType("text");

                    b.Property<string>("U_remark15")
                        .HasColumnType("text");

                    b.Property<string>("U_remark17")
                        .HasColumnType("text");

                    b.Property<string>("U_remark18")
                        .HasColumnType("text");

                    b.Property<string>("U_remark19")
                        .HasColumnType("text");

                    b.Property<string>("U_remark20")
                        .HasColumnType("text");

                    b.Property<string>("U_remark21")
                        .HasColumnType("text");

                    b.Property<string>("U_remark22")
                        .HasColumnType("text");

                    b.Property<string>("U_remark23")
                        .HasColumnType("text");

                    b.Property<string>("U_remark24")
                        .HasColumnType("text");

                    b.Property<string>("U_remark25")
                        .HasColumnType("text");

                    b.Property<string>("U_remark26")
                        .HasColumnType("text");

                    b.Property<string>("U_remark27")
                        .HasColumnType("text");

                    b.Property<string>("U_remark28")
                        .HasColumnType("text");

                    b.Property<string>("U_remark29")
                        .HasColumnType("text");

                    b.Property<string>("U_remark30")
                        .HasColumnType("text");

                    b.Property<string>("U_remark32")
                        .HasColumnType("text");

                    b.Property<string>("U_remark34")
                        .HasColumnType("text");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("U_remark38")
                        .HasColumnType("text");

                    b.Property<string>("U_remark39")
                        .HasColumnType("text");

                    b.Property<string>("U_remark43")
                        .HasColumnType("text");

                    b.Property<string>("U_remark45")
                        .HasColumnType("text");

                    b.Property<int?>("UgpEntry")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("UserText")
                        .HasColumnType("text");

                    b.Property<string>("ValidComm")
                        .HasColumnType("text");

                    b.Property<string>("WarrntTmpl")
                        .HasColumnType("text");

                    b.Property<string>("frozenFor")
                        .HasColumnType("text");

                    b.Property<decimal?>("onHldLimt")
                        .HasColumnType("numeric");

                    b.Property<string>("validFor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("validFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("validTo")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("AITM_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.AITW", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("Locked")
                        .HasColumnType("text");

                    b.Property<int?>("LogInstanc")
                        .HasColumnType("integer");

                    b.Property<decimal?>("OnHand")
                        .HasColumnType("numeric");

                    b.Property<int?>("U_FixMax")
                        .HasColumnType("integer");

                    b.Property<int?>("U_FixMin")
                        .HasColumnType("integer");

                    b.Property<string>("U_Lock")
                        .HasColumnType("text");

                    b.Property<int?>("U_MaxDayCategory")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MaxDayItem")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MinDayCategory")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MinDayItem")
                        .HasColumnType("integer");

                    b.Property<string>("U_Remark1")
                        .HasColumnType("text");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("AITW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.AVGOPBP", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Canceled")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTime")
                        .HasColumnType("integer");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("LogInst")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<string>("Transfered")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTime")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AVGOPBP", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.AVGPBP1", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int?>("LineId")
                        .HasColumnType("integer");

                    b.Property<int?>("LogInst")
                        .HasColumnType("integer");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<string>("U_ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("U_Myanmarlabel")
                        .HasColumnType("text");

                    b.Property<string>("U_Pomaxday")
                        .HasColumnType("text");

                    b.Property<string>("U_Pominday")
                        .HasColumnType("text");

                    b.Property<string>("U_Poschedule")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark")
                        .HasColumnType("text");

                    b.Property<string>("U_Vendorcode")
                        .HasColumnType("text");

                    b.Property<string>("U_Vendorname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AVGPBP1", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.CRD1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("Address3")
                        .HasColumnType("text");

                    b.Property<string>("AdresType")
                        .HasColumnType("text");

                    b.Property<string>("Block")
                        .HasColumnType("text");

                    b.Property<string>("Building")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<string>("GlblLocNum")
                        .HasColumnType("text");

                    b.Property<string>("LicTradNum")
                        .HasColumnType("text");

                    b.Property<int?>("LineNum")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("StreetNo")
                        .HasColumnType("text");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FRNM")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_LSNM")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_PHNO")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("CRD1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.DAILYCOUNT", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<int>("HANACOUNT")
                        .HasColumnType("integer");

                    b.Property<int>("PGCOUNT")
                        .HasColumnType("integer");

                    b.Property<string>("TABLENAME")
                        .HasColumnType("text");

                    b.Property<DateTime>("UPDATEDATE")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.ToTable("DAILY_COUNT", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.DWOITM", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<DateTime>("DOCDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("U_Purchase")
                        .HasColumnType("text");

                    b.Property<string>("U_Remak7")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark1")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark8")
                        .HasColumnType("text");

                    b.Property<string>("U_ramark31")
                        .HasColumnType("text");

                    b.Property<string>("validFor")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OITMLOG", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.DWOITW", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("DOCDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("Locked")
                        .HasColumnType("text");

                    b.Property<decimal?>("OnHand")
                        .HasColumnType("numeric");

                    b.Property<int?>("U_FixMax")
                        .HasColumnType("integer");

                    b.Property<int?>("U_FixMin")
                        .HasColumnType("integer");

                    b.Property<string>("U_Lock")
                        .HasColumnType("text");

                    b.Property<int?>("U_MaxDayCategory")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MaxDayItem")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MinDayCategory")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MinDayItem")
                        .HasColumnType("integer");

                    b.Property<string>("U_Remark1")
                        .HasColumnType("text");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OITWLOG", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.DWPBP1", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<DateTime>("DOCDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("U_Pomaxday")
                        .HasColumnType("text");

                    b.Property<string>("U_Pominday")
                        .HasColumnType("text");

                    b.Property<string>("U_Poschedule")
                        .HasColumnType("text");

                    b.Property<string>("U_Vendorcode")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PBP1LOG", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.IGE1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcctCode")
                        .HasColumnType("text");

                    b.Property<int?>("BaseLine")
                        .HasColumnType("integer");

                    b.Property<string>("ChgAsmBoMW")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DefBreak")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<string>("FreeTxt")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvQtyOnly")
                        .HasColumnType("text");

                    b.Property<string>("IsByPrdct")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("LineNum")
                        .HasColumnType("integer");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumPerMsr2")
                        .HasColumnType("numeric");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("PriceEdit")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("SerialNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Shortages")
                        .HasColumnType("numeric");

                    b.Property<string>("SpecPrice")
                        .HasColumnType("text");

                    b.Property<decimal?>("StockPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSumSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Surpluses")
                        .HasColumnType("numeric");

                    b.Property<string>("TaxOnly")
                        .HasColumnType("text");

                    b.Property<string>("TaxType")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<int?>("TrnsCode")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_RGCD")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TDKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_U_Negative")
                        .HasColumnType("numeric");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("UomEntry2")
                        .HasColumnType("integer");

                    b.Property<string>("UseBaseUn")
                        .HasColumnType("text");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("WtLiable")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("IGE1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.IGN1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcctCode")
                        .HasColumnType("text");

                    b.Property<int?>("BaseLine")
                        .HasColumnType("integer");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvQtyOnly")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("LineNum")
                        .HasColumnType("integer");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumPerMsr2")
                        .HasColumnType("numeric");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("PriceEdit")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<string>("SerialNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("StockPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSumSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<string>("U_Price")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_U_Negative")
                        .HasColumnType("numeric");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr2")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("IGN1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.INV1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcctCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ActDelDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal?>("AssblValue")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseCard")
                        .HasColumnType("text");

                    b.Property<int?>("BaseDocNum")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseLine")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BaseOpnQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<int?>("BaseType")
                        .HasColumnType("integer");

                    b.Property<int?>("CESTCode")
                        .HasColumnType("integer");

                    b.Property<string>("CUSplit")
                        .HasColumnType("text");

                    b.Property<string>("ChgAsmBoMW")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<string>("CogsAcct")
                        .HasColumnType("text");

                    b.Property<int?>("CommClass")
                        .HasColumnType("integer");

                    b.Property<string>("ConsumeFCT")
                        .HasColumnType("text");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DefBreak")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DelivrdQty")
                        .HasColumnType("numeric");

                    b.Property<string>("DescOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("DistribExp")
                        .HasColumnType("text");

                    b.Property<string>("DistribIS")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor3")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor4")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<int?>("Flags")
                        .HasColumnType("integer");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<string>("FreeTxt")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GPTtlBasPr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotalSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("GrossBase")
                        .HasColumnType("integer");

                    b.Property<decimal?>("GrossBuyPr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrssProfSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrssProfit")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("Incoterms")
                        .HasColumnType("integer");

                    b.Property<string>("IndEscala")
                        .HasColumnType("text");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int>("LineNum")
                        .HasColumnType("integer");

                    b.Property<string>("LineStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("LineVendor")
                        .HasColumnType("text");

                    b.Property<int?>("NCMCode")
                        .HasColumnType("integer");

                    b.Property<string>("NeedQty")
                        .HasColumnType("text");

                    b.Property<decimal?>("NumPerMsr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumPerMsr2")
                        .HasColumnType("numeric");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OrderedQty")
                        .HasColumnType("numeric");

                    b.Property<string>("OrigItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("PQTReqQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PackQty")
                        .HasColumnType("numeric");

                    b.Property<string>("PartRetire")
                        .HasColumnType("text");

                    b.Property<string>("PoTrgEntry")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceAfVAT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("QtyToShip")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RetireQty")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReturnAct")
                        .HasColumnType("integer");

                    b.Property<string>("SWW")
                        .HasColumnType("text");

                    b.Property<string>("ShipToCode")
                        .HasColumnType("text");

                    b.Property<string>("ShipToDesc")
                        .HasColumnType("text");

                    b.Property<decimal?>("Shortages")
                        .HasColumnType("numeric");

                    b.Property<int?>("SlpCode")
                        .HasColumnType("integer");

                    b.Property<string>("SpecPrice")
                        .HasColumnType("text");

                    b.Property<int?>("StdItemId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StockPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSumSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockValue")
                        .HasColumnType("numeric");

                    b.Property<string>("SubCatNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Surpluses")
                        .HasColumnType("numeric");

                    b.Property<int?>("TargetType")
                        .HasColumnType("integer");

                    b.Property<string>("TaxAmtSrc")
                        .HasColumnType("text");

                    b.Property<string>("TaxOnly")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("ThirdParty")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<int?>("TransMod")
                        .HasColumnType("integer");

                    b.Property<string>("TreeType")
                        .HasColumnType("text");

                    b.Property<int?>("TrgetEntry")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_RGCD")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TDKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_U_Negative")
                        .HasColumnType("numeric");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("UomEntry2")
                        .HasColumnType("integer");

                    b.Property<string>("UseBaseUn")
                        .HasColumnType("text");

                    b.Property<string>("VatGrpSrc")
                        .HasColumnType("text");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("VolUnit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Weight1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Wght1Unit")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("WtCalced")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("INV1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.ITM1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<int?>("BasePLNum")
                        .HasColumnType("integer");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Currency1")
                        .HasColumnType("text");

                    b.Property<string>("Currency2")
                        .HasColumnType("text");

                    b.Property<decimal?>("Factor")
                        .HasColumnType("numeric");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("Ovrwritten")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("PriceList")
                        .HasColumnType("integer");

                    b.Property<string>("PriceType")
                        .HasColumnType("text");

                    b.Property<int>("UomEntry")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("ITM1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.ITM9", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AutoUpdate")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Currency1")
                        .HasColumnType("text");

                    b.Property<string>("Currency2")
                        .HasColumnType("text");

                    b.Property<decimal?>("Factor")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor2")
                        .HasColumnType("numeric");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("PriceList")
                        .HasColumnType("integer");

                    b.Property<string>("PriceType")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.ToTable("ITM9_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.ITT1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AddQuantit")
                        .HasColumnType("text");

                    b.Property<string>("ChildNum")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("Father")
                        .HasColumnType("text");

                    b.Property<string>("IssueMthd")
                        .HasColumnType("text");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<string>("LineText")
                        .HasColumnType("text");

                    b.Property<string>("LogInstanc")
                        .HasColumnType("text");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode2")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode3")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode4")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode5")
                        .HasColumnType("text");

                    b.Property<string>("OrigCurr")
                        .HasColumnType("text");

                    b.Property<string>("OrigPrice")
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .HasColumnType("text");

                    b.Property<string>("PriceList")
                        .HasColumnType("text");

                    b.Property<string>("PrncpInput")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<string>("Quantity")
                        .HasColumnType("text");

                    b.Property<string>("StageId")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("Uom")
                        .HasColumnType("text");

                    b.Property<string>("VisOrder")
                        .HasColumnType("text");

                    b.Property<string>("Warehouse")
                        .HasColumnType("text");

                    b.Property<string>("WipActCode")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("ITT1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.JDT1", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Account")
                        .HasColumnType("text");

                    b.Property<string>("AdjTran")
                        .HasColumnType("text");

                    b.Property<decimal?>("BalDueCred")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BalDueDeb")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BalFcCred")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BalFcDeb")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BalScCred")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BalScDeb")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<string>("Closed")
                        .HasColumnType("text");

                    b.Property<string>("ContraAct")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Credit")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Debit")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("FCCredit")
                        .HasColumnType("numeric");

                    b.Property<string>("FCCurrency")
                        .HasColumnType("text");

                    b.Property<decimal?>("FCDebit")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("GrossValFc")
                        .HasColumnType("numeric");

                    b.Property<string>("Indicator")
                        .HasColumnType("text");

                    b.Property<string>("IsNet")
                        .HasColumnType("text");

                    b.Property<string>("LineMemo")
                        .HasColumnType("text");

                    b.Property<int?>("LineType")
                        .HasColumnType("integer");

                    b.Property<int?>("Line_ID")
                        .HasColumnType("integer");

                    b.Property<int?>("Location")
                        .HasColumnType("integer");

                    b.Property<int?>("LogInstanc")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LvlUpdDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ObjType")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode2")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode3")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode4")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode5")
                        .HasColumnType("text");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("text");

                    b.Property<string>("ProfitCode")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("Ref2")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Ref2Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Ref3Line")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("RelLineID")
                        .HasColumnType("integer");

                    b.Property<int?>("RelTransId")
                        .HasColumnType("integer");

                    b.Property<string>("RevSource")
                        .HasColumnType("text");

                    b.Property<decimal?>("SYSCred")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SYSDeb")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SYSTVat")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SYSVatSum")
                        .HasColumnType("numeric");

                    b.Property<string>("ShortName")
                        .HasColumnType("text");

                    b.Property<int?>("SourceID")
                        .HasColumnType("integer");

                    b.Property<int?>("SourceLine")
                        .HasColumnType("integer");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TaxPostAcc")
                        .HasColumnType("text");

                    b.Property<int?>("TaxType")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TotalVat")
                        .HasColumnType("numeric");

                    b.Property<string>("TransCode")
                        .HasColumnType("text");

                    b.Property<int>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("TransType")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ValidFrom2")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ValidFrom3")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ValidFrom4")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ValidFrom5")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("VatAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("VatDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("JDT1", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.LogDetails", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("ExceTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("KeyCalue")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Module")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("LOG", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.MRPSALESDAY", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("CREATEDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DOCDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ITEMCODE")
                        .HasColumnType("text");

                    b.Property<string>("ITEMNAME")
                        .HasColumnType("text");

                    b.Property<double>("SALESQ")
                        .HasColumnType("double precision");

                    b.Property<string>("WHSCODE")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("MRP_SALESDAY_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.MRPSTOCKDAY", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("CREATEDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DOCDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ITEMCODE")
                        .HasColumnType("text");

                    b.Property<string>("ITEMNAME")
                        .HasColumnType("text");

                    b.Property<string>("L_CODE")
                        .HasColumnType("text");

                    b.Property<string>("L_NAME")
                        .HasColumnType("text");

                    b.Property<double>("ONHAND")
                        .HasColumnType("double precision");

                    b.Property<string>("WHSCODE")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("MRP_STOCKDAY_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.MRPSTOCKDAYTEST", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("CREATEDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DOCDATE")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ITEMCODE")
                        .HasColumnType("text");

                    b.Property<string>("ITEMNAME")
                        .HasColumnType("text");

                    b.Property<string>("L_CODE")
                        .HasColumnType("text");

                    b.Property<string>("L_NAME")
                        .HasColumnType("text");

                    b.Property<int>("ONHAND")
                        .HasColumnType("integer");

                    b.Property<string>("WHSCODE")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("MRP_STOCKDAYTEST", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OBCD", b =>
                {
                    b.Property<int>("BcdEntry")
                        .HasColumnType("integer");

                    b.Property<string>("BcdCode")
                        .HasColumnType("text");

                    b.Property<string>("BcdName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.HasKey("BcdEntry");

                    b.ToTable("OBCD_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OCRD", b =>
                {
                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("AddID")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AutoPost")
                        .HasColumnType("text");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BalanceSys")
                        .HasColumnType("numeric");

                    b.Property<string>("BankCode")
                        .HasColumnType("text");

                    b.Property<string>("BankCountr")
                        .HasColumnType("text");

                    b.Property<string>("BillToDef")
                        .HasColumnType("text");

                    b.Property<string>("Block")
                        .HasColumnType("text");

                    b.Property<string>("Building")
                        .HasColumnType("text");

                    b.Property<string>("CardFName")
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<string>("CardType")
                        .HasColumnType("text");

                    b.Property<string>("Cellular")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CntctPrsn")
                        .HasColumnType("text");

                    b.Property<string>("County")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DNoteBalSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DNotesBal")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<string>("DebPayAcct")
                        .HasColumnType("text");

                    b.Property<string>("DflAccount")
                        .HasColumnType("text");

                    b.Property<int?>("DflBankKey")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("numeric");

                    b.Property<int?>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("DpmClear")
                        .HasColumnType("text");

                    b.Property<string>("DunTerm")
                        .HasColumnType("text");

                    b.Property<int?>("DunnLevel")
                        .HasColumnType("integer");

                    b.Property<string>("E_Mail")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExpnPrfFnd")
                        .HasColumnType("numeric");

                    b.Property<string>("FatherCard")
                        .HasColumnType("text");

                    b.Property<string>("Fax")
                        .HasColumnType("text");

                    b.Property<string>("Free_Text")
                        .HasColumnType("text");

                    b.Property<int?>("GroupCode")
                        .HasColumnType("integer");

                    b.Property<int?>("GroupNum")
                        .HasColumnType("integer");

                    b.Property<string>("HousBnkCry")
                        .HasColumnType("text");

                    b.Property<string>("HouseBank")
                        .HasColumnType("text");

                    b.Property<string>("IntrntSite")
                        .HasColumnType("text");

                    b.Property<int?>("LangCode")
                        .HasColumnType("integer");

                    b.Property<string>("LicTradNum")
                        .HasColumnType("text");

                    b.Property<int?>("ListNum")
                        .HasColumnType("integer");

                    b.Property<string>("MailBuildi")
                        .HasColumnType("text");

                    b.Property<string>("MailCountr")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<decimal?>("Number")
                        .HasColumnType("numeric");

                    b.Property<string>("OpCode347")
                        .HasColumnType("text");

                    b.Property<int?>("OprCount")
                        .HasColumnType("integer");

                    b.Property<decimal?>("OrderBalSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OrdersBal")
                        .HasColumnType("numeric");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone1")
                        .HasColumnType("text");

                    b.Property<string>("Phone2")
                        .HasColumnType("text");

                    b.Property<string>("PymCode")
                        .HasColumnType("text");

                    b.Property<string>("RateDifAct")
                        .HasColumnType("text");

                    b.Property<int?>("SPGCounter")
                        .HasColumnType("integer");

                    b.Property<int?>("SPPCounter")
                        .HasColumnType("integer");

                    b.Property<int?>("Series")
                        .HasColumnType("integer");

                    b.Property<string>("ShipToDef")
                        .HasColumnType("text");

                    b.Property<int?>("ShipType")
                        .HasColumnType("integer");

                    b.Property<string>("StreetNo")
                        .HasColumnType("text");

                    b.Property<string>("U_ASSHOP")
                        .HasColumnType("text");

                    b.Property<string>("U_AllY")
                        .HasColumnType("text");

                    b.Property<string>("U_BOY_23_QCCS")
                        .HasColumnType("text");

                    b.Property<string>("U_BPCategoryCode")
                        .HasColumnType("text");

                    b.Property<string>("U_BuyerName")
                        .HasColumnType("text");

                    b.Property<string>("U_CELESHOP")
                        .HasColumnType("text");

                    b.Property<string>("U_CONTAINERBAKERYSHOP")
                        .HasColumnType("text");

                    b.Property<string>("U_CONTRACT")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ACID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ISRE")
                        .HasColumnType("text");

                    b.Property<string>("U_END")
                        .HasColumnType("text");

                    b.Property<string>("U_ExcellenceShop")
                        .HasColumnType("text");

                    b.Property<string>("U_FINANCE")
                        .HasColumnType("text");

                    b.Property<string>("U_FPV")
                        .HasColumnType("text");

                    b.Property<string>("U_FR")
                        .HasColumnType("text");

                    b.Property<string>("U_FREEZER15SHOP")
                        .HasColumnType("text");

                    b.Property<string>("U_FTA")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_LOGISTICR")
                        .HasColumnType("text");

                    b.Property<string>("U_License")
                        .HasColumnType("text");

                    b.Property<string>("U_MLABEL")
                        .HasColumnType("text");

                    b.Property<string>("U_OCNS10S")
                        .HasColumnType("text");

                    b.Property<string>("U_OPEN")
                        .HasColumnType("text");

                    b.Property<string>("U_ORDERPHONE")
                        .HasColumnType("text");

                    b.Property<string>("U_ORDREDSS")
                        .HasColumnType("text");

                    b.Property<string>("U_POValidDuration")
                        .HasColumnType("text");

                    b.Property<string>("U_Rmark")
                        .HasColumnType("text");

                    b.Property<string>("U_S841")
                        .HasColumnType("text");

                    b.Property<string>("U_START")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF1")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF10")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF2")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF3")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF4")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF5")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF6")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF7")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF8")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF9")
                        .HasColumnType("text");

                    b.Property<string>("U_VENDORLOCATE")
                        .HasColumnType("text");

                    b.Property<string>("U_VENDORT")
                        .HasColumnType("text");

                    b.Property<string>("U_alcoholshop")
                        .HasColumnType("text");

                    b.Property<string>("U_alln")
                        .HasColumnType("text");

                    b.Property<string>("U_bkshop")
                        .HasColumnType("text");

                    b.Property<string>("U_cashier15shop")
                        .HasColumnType("text");

                    b.Property<string>("U_cremoicecreamshop")
                        .HasColumnType("text");

                    b.Property<string>("U_dcoshop")
                        .HasColumnType("text");

                    b.Property<string>("U_foodpandashop")
                        .HasColumnType("text");

                    b.Property<string>("U_freezermonmikl")
                        .HasColumnType("text");

                    b.Property<string>("U_freezerwahaha")
                        .HasColumnType("text");

                    b.Property<string>("U_fudoshop")
                        .HasColumnType("text");

                    b.Property<string>("U_gartime")
                        .HasColumnType("text");

                    b.Property<string>("U_goodmormingshop")
                        .HasColumnType("text");

                    b.Property<string>("U_gustoshop")
                        .HasColumnType("text");

                    b.Property<string>("U_hotfood15shop")
                        .HasColumnType("text");

                    b.Property<string>("U_oc15shop")
                        .HasColumnType("text");

                    b.Property<string>("U_ocsaleshop")
                        .HasColumnType("text");

                    b.Property<string>("U_pricess")
                        .HasColumnType("text");

                    b.Property<string>("U_puccishop")
                        .HasColumnType("text");

                    b.Property<string>("U_queenshop")
                        .HasColumnType("text");

                    b.Property<string>("U_shelf15shop")
                        .HasColumnType("text");

                    b.Property<string>("U_shelfbreadcake15shop")
                        .HasColumnType("text");

                    b.Property<string>("U_spshop")
                        .HasColumnType("text");

                    b.Property<string>("U_type")
                        .HasColumnType("text");

                    b.Property<string>("U_winosaleshop6door")
                        .HasColumnType("text");

                    b.Property<string>("U_wl15shop")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("WTLiable")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.Property<string>("frozenFor")
                        .HasColumnType("text");

                    b.Property<string>("validFor")
                        .HasColumnType("text");

                    b.HasKey("CardCode");

                    b.ToTable("OCRD_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OCRG", b =>
                {
                    b.Property<int>("GroupCode")
                        .HasColumnType("integer");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("GroupName")
                        .HasColumnType("text");

                    b.Property<string>("GroupType")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.HasKey("GroupCode");

                    b.ToTable("OCRG_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OCTG", b =>
                {
                    b.Property<int?>("GroupNum")
                        .HasColumnType("integer");

                    b.Property<string>("BslineDate")
                        .HasColumnType("text");

                    b.Property<string>("CrdMthd")
                        .HasColumnType("text");

                    b.Property<decimal?>("CredLimit")
                        .HasColumnType("numeric");

                    b.Property<string>("CshRelev")
                        .HasColumnType("text");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("DiscCode")
                        .HasColumnType("text");

                    b.Property<string>("DunningCod")
                        .HasColumnType("text");

                    b.Property<int?>("ExtraDays")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtraMonth")
                        .HasColumnType("integer");

                    b.Property<int?>("InstNum")
                        .HasColumnType("integer");

                    b.Property<decimal?>("LatePyChrg")
                        .HasColumnType("numeric");

                    b.Property<int?>("ListNum")
                        .HasColumnType("integer");

                    b.Property<int?>("NumOfPmnts")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ObligLimit")
                        .HasColumnType("numeric");

                    b.Property<string>("OpenRcpt")
                        .HasColumnType("text");

                    b.Property<string>("PayDuMonth")
                        .HasColumnType("text");

                    b.Property<decimal?>("Payment1")
                        .HasColumnType("numeric");

                    b.Property<string>("Payments")
                        .HasColumnType("text");

                    b.Property<int?>("PaymntsNum")
                        .HasColumnType("integer");

                    b.Property<string>("PymntGroup")
                        .HasColumnType("text");

                    b.Property<int?>("TolDays")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<string>("VATFirst")
                        .HasColumnType("text");

                    b.Property<decimal?>("VolumDscnt")
                        .HasColumnType("numeric");

                    b.HasKey("GroupNum");

                    b.ToTable("OCTG", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OIGE", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<int?>("DocTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("GroupNum")
                        .HasColumnType("integer");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("Ref2")
                        .HasColumnType("text");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_ACID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FMST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FRST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_RGCD")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STAS")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_TransType")
                        .HasColumnType("text");

                    b.Property<string>("U_VandorExchange")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("VATFirst")
                        .HasColumnType("text");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<int?>("draftKey")
                        .HasColumnType("integer");

                    b.HasKey("DocEntry");

                    b.ToTable("OIGE_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OIGN", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<int?>("DocTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("GroupNum")
                        .HasColumnType("integer");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("Ref2")
                        .HasColumnType("text");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_ACID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_TransType")
                        .HasColumnType("text");

                    b.Property<string>("U_VandorExchange")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<int?>("draftKey")
                        .HasColumnType("integer");

                    b.HasKey("DocEntry");

                    b.ToTable("OIGN_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OINV", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("BPNameOW")
                        .HasColumnType("text");

                    b.Property<string>("CANCELED")
                        .HasColumnType("text");

                    b.Property<string>("CEECFlag")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSumSy")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<string>("DocStatus")
                        .HasColumnType("text");

                    b.Property<int?>("DocTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<string>("DocType")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("FatherCard")
                        .HasColumnType("text");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrosProfSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrosProfit")
                        .HasColumnType("numeric");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<string>("LastPmnTyp")
                        .HasColumnType("text");

                    b.Property<string>("LicTradNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Notify")
                        .HasColumnType("text");

                    b.Property<string>("NumAtCard")
                        .HasColumnType("text");

                    b.Property<decimal?>("PaidSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidSumSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidToDate")
                        .HasColumnType("numeric");

                    b.Property<string>("PeyMethod")
                        .HasColumnType("text");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<int?>("ReceiptNum")
                        .HasColumnType("integer");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("ShipToCode")
                        .HasColumnType("text");

                    b.Property<int?>("SlpCode")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TrackNo")
                        .HasColumnType("text");

                    b.Property<int?>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_FMST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FRST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_SLEX")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_SNGL")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<string>("UseBilAddr")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("DocEntry");

                    b.ToTable("OINV_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OITB", b =>
                {
                    b.Property<int?>("ItmsGrpCod")
                        .HasColumnType("integer");

                    b.Property<string>("BalInvntAc")
                        .HasColumnType("text");

                    b.Property<string>("DecreasAc")
                        .HasColumnType("text");

                    b.Property<string>("IncreasAc")
                        .HasColumnType("text");

                    b.Property<string>("ItmsGrpNam")
                        .HasColumnType("text");

                    b.Property<string>("NegStckAct")
                        .HasColumnType("text");

                    b.Property<string>("PriceDifAc")
                        .HasColumnType("text");

                    b.Property<string>("ProductSrc")
                        .HasColumnType("text");

                    b.Property<string>("ReturnAc")
                        .HasColumnType("text");

                    b.Property<string>("SaleCostAc")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("userSign2")
                        .HasColumnType("integer");

                    b.HasKey("ItmsGrpCod");

                    b.ToTable("OITB_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OITM", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("AvgPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BHeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BHeight2")
                        .HasColumnType("numeric");

                    b.Property<int?>("BHght1Unit")
                        .HasColumnType("integer");

                    b.Property<int?>("BLen1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BLength1")
                        .HasColumnType("numeric");

                    b.Property<int?>("BVolUnit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BVolume")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BWeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BWeight2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BWidth1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BWidth2")
                        .HasColumnType("numeric");

                    b.Property<string>("BeverGrpC")
                        .HasColumnType("text");

                    b.Property<int?>("BeverTM")
                        .HasColumnType("integer");

                    b.Property<string>("BeverTblC")
                        .HasColumnType("text");

                    b.Property<decimal?>("Blength2")
                        .HasColumnType("numeric");

                    b.Property<string>("BuyUnitMsr")
                        .HasColumnType("text");

                    b.Property<string>("ByWh")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CntUnitMsr")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<int?>("CommClass")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<string>("DfltWH")
                        .HasColumnType("text");

                    b.Property<int?>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ExcFixAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExcRate")
                        .HasColumnType("numeric");

                    b.Property<int?>("FirmCode")
                        .HasColumnType("integer");

                    b.Property<string>("FrgnName")
                        .HasColumnType("text");

                    b.Property<string>("FrozenComm")
                        .HasColumnType("text");

                    b.Property<int?>("FuelCode")
                        .HasColumnType("integer");

                    b.Property<int?>("INUoMEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("IUoMEntry")
                        .HasColumnType("integer");

                    b.Property<decimal?>("IWeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("IWeight2")
                        .HasColumnType("numeric");

                    b.Property<int?>("IWght1Unit")
                        .HasColumnType("integer");

                    b.Property<string>("InvntItem")
                        .HasColumnType("text");

                    b.Property<string>("InvntryUom")
                        .HasColumnType("text");

                    b.Property<decimal?>("IsCommited")
                        .HasColumnType("numeric");

                    b.Property<string>("ItemName")
                        .HasColumnType("text");

                    b.Property<int?>("ItmsGrpCod")
                        .HasColumnType("integer");

                    b.Property<string>("LastPurCur")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastPurDat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("LastPurPrc")
                        .HasColumnType("numeric");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LstEvlDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("LstEvlPric")
                        .HasColumnType("numeric");

                    b.Property<string>("NoDiscount")
                        .HasColumnType("text");

                    b.Property<decimal?>("NumInBuy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumInSale")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OnHand")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OnOrder")
                        .HasColumnType("numeric");

                    b.Property<int?>("PUoMEntry")
                        .HasColumnType("integer");

                    b.Property<string>("PicturName")
                        .HasColumnType("text");

                    b.Property<string>("PrchseItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("PrdStdCst")
                        .HasColumnType("numeric");

                    b.Property<int?>("PriceUnit")
                        .HasColumnType("integer");

                    b.Property<string>("ProductSrc")
                        .HasColumnType("text");

                    b.Property<string>("PurPackMsr")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup1")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup10")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup11")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup12")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup13")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup14")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup15")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup16")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup17")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup18")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup19")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup2")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup20")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup21")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup22")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup23")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup24")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup25")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup26")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup27")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup28")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup29")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup3")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup30")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup31")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup32")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup33")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup34")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup35")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup36")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup37")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup38")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup39")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup4")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup40")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup41")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup42")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup43")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup44")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup45")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup46")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup47")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup48")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup49")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup5")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup50")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup51")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup52")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup53")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup54")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup55")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup56")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup57")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup58")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup59")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup6")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup60")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup61")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup62")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup63")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup64")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup7")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup8")
                        .HasColumnType("text");

                    b.Property<string>("QryGroup9")
                        .HasColumnType("text");

                    b.Property<decimal?>("SHeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SHeight2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SLength1")
                        .HasColumnType("numeric");

                    b.Property<int?>("SUoMEntry")
                        .HasColumnType("integer");

                    b.Property<string>("SWW")
                        .HasColumnType("text");

                    b.Property<decimal?>("SWeight1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SWeight2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SWidth1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SWidth2")
                        .HasColumnType("numeric");

                    b.Property<string>("SalPackMsr")
                        .HasColumnType("text");

                    b.Property<string>("SalUnitMsr")
                        .HasColumnType("text");

                    b.Property<string>("SellItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("Slength2")
                        .HasColumnType("numeric");

                    b.Property<string>("SouVirAsst")
                        .HasColumnType("text");

                    b.Property<int?>("StdItemId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StockValue")
                        .HasColumnType("numeric");

                    b.Property<string>("SuppCatNum")
                        .HasColumnType("text");

                    b.Property<string>("TreeType")
                        .HasColumnType("text");

                    b.Property<string>("U_2ndNewItemFees")
                        .HasColumnType("text");

                    b.Property<string>("U_BUYER")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_CUOMC")
                        .HasColumnType("numeric");

                    b.Property<string>("U_CUOMN")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ISDT")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ISTO")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_MDFD")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_NSPO")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_REIT")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_SLDC")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TIPR")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ZVIT")
                        .HasColumnType("text");

                    b.Property<string>("U_Expired")
                        .HasColumnType("text");

                    b.Property<string>("U_HOTFOOD")
                        .HasColumnType("text");

                    b.Property<string>("U_MeetingInactiveDate")
                        .HasColumnType("text");

                    b.Property<string>("U_NOSALEMDUD")
                        .HasColumnType("text");

                    b.Property<string>("U_NOSALENORMALNEWUD")
                        .HasColumnType("text");

                    b.Property<string>("U_POTYPE")
                        .HasColumnType("text");

                    b.Property<string>("U_PreferBP")
                        .HasColumnType("text");

                    b.Property<string>("U_Purchase")
                        .HasColumnType("text");

                    b.Property<string>("U_ReasonCodeDaily")
                        .HasColumnType("text");

                    b.Property<string>("U_ReasonCodeItem")
                        .HasColumnType("text");

                    b.Property<string>("U_RefItemCode")
                        .HasColumnType("text");

                    b.Property<string>("U_Remak7")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark1")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark10")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark2")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark3")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark31")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark4")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark5")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark6")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark7")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark8")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark9")
                        .HasColumnType("text");

                    b.Property<string>("U_SPAREV")
                        .HasColumnType("text");

                    b.Property<string>("U_SpecialItem")
                        .HasColumnType("text");

                    b.Property<string>("U_StockUOM")
                        .HasColumnType("text");

                    b.Property<string>("U_Type")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF1")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF10")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF2")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF3")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF4")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF5")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF6")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF7")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF8")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF9")
                        .HasColumnType("text");

                    b.Property<string>("U_UOM")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_UOMCo")
                        .HasColumnType("numeric");

                    b.Property<string>("U_bpkind")
                        .HasColumnType("text");

                    b.Property<string>("U_foodpanda")
                        .HasColumnType("text");

                    b.Property<string>("U_pomaxday")
                        .HasColumnType("text");

                    b.Property<string>("U_pominday")
                        .HasColumnType("text");

                    b.Property<string>("U_poschedule")
                        .HasColumnType("text");

                    b.Property<string>("U_ramark31")
                        .HasColumnType("text");

                    b.Property<string>("U_remark11")
                        .HasColumnType("text");

                    b.Property<string>("U_remark12")
                        .HasColumnType("text");

                    b.Property<string>("U_remark13")
                        .HasColumnType("text");

                    b.Property<string>("U_remark14")
                        .HasColumnType("text");

                    b.Property<string>("U_remark15")
                        .HasColumnType("text");

                    b.Property<string>("U_remark17")
                        .HasColumnType("text");

                    b.Property<string>("U_remark18")
                        .HasColumnType("text");

                    b.Property<string>("U_remark19")
                        .HasColumnType("text");

                    b.Property<string>("U_remark20")
                        .HasColumnType("text");

                    b.Property<string>("U_remark21")
                        .HasColumnType("text");

                    b.Property<string>("U_remark22")
                        .HasColumnType("text");

                    b.Property<string>("U_remark23")
                        .HasColumnType("text");

                    b.Property<string>("U_remark24")
                        .HasColumnType("text");

                    b.Property<string>("U_remark25")
                        .HasColumnType("text");

                    b.Property<string>("U_remark26")
                        .HasColumnType("text");

                    b.Property<string>("U_remark27")
                        .HasColumnType("text");

                    b.Property<string>("U_remark28")
                        .HasColumnType("text");

                    b.Property<string>("U_remark29")
                        .HasColumnType("text");

                    b.Property<string>("U_remark30")
                        .HasColumnType("text");

                    b.Property<string>("U_remark32")
                        .HasColumnType("text");

                    b.Property<string>("U_remark34")
                        .HasColumnType("text");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("U_remark38")
                        .HasColumnType("text");

                    b.Property<string>("U_remark39")
                        .HasColumnType("text");

                    b.Property<string>("U_remark43")
                        .HasColumnType("text");

                    b.Property<string>("U_remark45")
                        .HasColumnType("text");

                    b.Property<int?>("UgpEntry")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<string>("UserText")
                        .HasColumnType("text");

                    b.Property<string>("ValidComm")
                        .HasColumnType("text");

                    b.Property<string>("WarrntTmpl")
                        .HasColumnType("text");

                    b.Property<string>("frozenFor")
                        .HasColumnType("text");

                    b.Property<string>("validFor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("validFrom")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("validTo")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("ItemCode");

                    b.ToTable("OITM_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OITT", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("CreateDate")
                        .HasColumnType("text");

                    b.Property<string>("CreateTS")
                        .HasColumnType("text");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("DispCurr")
                        .HasColumnType("text");

                    b.Property<string>("HideComp")
                        .HasColumnType("text");

                    b.Property<string>("LogInstac")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode2")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode3")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode4")
                        .HasColumnType("text");

                    b.Property<string>("OcrCode5")
                        .HasColumnType("text");

                    b.Property<string>("PlAvgSize")
                        .HasColumnType("text");

                    b.Property<string>("PriceList")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<string>("Qauntity")
                        .HasColumnType("text");

                    b.Property<string>("SCNCounter")
                        .HasColumnType("text");

                    b.Property<string>("ToWH")
                        .HasColumnType("text");

                    b.Property<string>("Transfered")
                        .HasColumnType("text");

                    b.Property<string>("TreeType")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_MDFD")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_REIT")
                        .HasColumnType("text");

                    b.Property<string>("UpdateDate")
                        .HasColumnType("text");

                    b.Property<string>("UpdateTS")
                        .HasColumnType("text");

                    b.Property<string>("UpdateTime")
                        .HasColumnType("text");

                    b.Property<string>("UserSign")
                        .HasColumnType("text");

                    b.Property<string>("UserSign2")
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("OITT_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OITW", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<decimal?>("IsCommited")
                        .HasColumnType("numeric");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("Locked")
                        .HasColumnType("text");

                    b.Property<decimal?>("MinStock")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OnHand")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OnOrder")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("U_Daily")
                        .HasColumnType("text");

                    b.Property<int?>("U_FixMax")
                        .HasColumnType("integer");

                    b.Property<int?>("U_FixMin")
                        .HasColumnType("integer");

                    b.Property<string>("U_Lock")
                        .HasColumnType("text");

                    b.Property<int?>("U_MaxDayCategory")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MaxDayItem")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MinDayCategory")
                        .HasColumnType("integer");

                    b.Property<int?>("U_MinDayItem")
                        .HasColumnType("integer");

                    b.Property<string>("U_ReasonCodeTake")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark1")
                        .HasColumnType("text");

                    b.Property<string>("U_TakeFixMinMax")
                        .HasColumnType("text");

                    b.Property<string>("U_TakeLargeValue")
                        .HasColumnType("text");

                    b.Property<string>("U_smsq")
                        .HasColumnType("text");

                    b.Property<string>("U_vtuq")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("id");

                    b.ToTable("OITW_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OJDT", b =>
                {
                    b.Property<int>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("FcTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("LocTotal")
                        .HasColumnType("numeric");

                    b.Property<int?>("LogInstanc")
                        .HasColumnType("integer");

                    b.Property<string>("Memo")
                        .HasColumnType("text");

                    b.Property<string>("ObjType")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("Ref2")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("SysTotal")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TransCurr")
                        .HasColumnType("text");

                    b.Property<string>("TransType")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_MDFD")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.HasKey("TransId");

                    b.ToTable("OJDT", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OMRC", b =>
                {
                    b.Property<int>("FirmCode")
                        .HasColumnType("integer");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("FirmName")
                        .HasColumnType("text");

                    b.Property<int>("UserSign")
                        .HasColumnType("integer");

                    b.HasKey("FirmCode");

                    b.ToTable("OMRC_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OPDN", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AssetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("BPChCntc")
                        .HasColumnType("integer");

                    b.Property<string>("BPNameOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("BaseDiscPr")
                        .HasColumnType("numeric");

                    b.Property<string>("CANCELED")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSumSy")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<string>("DocStatus")
                        .HasColumnType("text");

                    b.Property<int?>("DocTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<string>("DocType")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExpAppl")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExpApplSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("ExtraDays")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtraMonth")
                        .HasColumnType("integer");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Footer")
                        .HasColumnType("text");

                    b.Property<decimal?>("GrosProfFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrosProfSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrosProfit")
                        .HasColumnType("numeric");

                    b.Property<int?>("GroupNum")
                        .HasColumnType("integer");

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<int?>("LangCode")
                        .HasColumnType("integer");

                    b.Property<string>("LetterNum")
                        .HasColumnType("text");

                    b.Property<string>("LicTradNum")
                        .HasColumnType("text");

                    b.Property<int?>("LndCstNum")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Notify")
                        .HasColumnType("text");

                    b.Property<string>("NumAtCard")
                        .HasColumnType("text");

                    b.Property<string>("OpenForLaC")
                        .HasColumnType("text");

                    b.Property<decimal?>("PaidSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidToDate")
                        .HasColumnType("numeric");

                    b.Property<string>("PayDuMonth")
                        .HasColumnType("text");

                    b.Property<string>("PayToCode")
                        .HasColumnType("text");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("text");

                    b.Property<string>("PeyMethod")
                        .HasColumnType("text");

                    b.Property<string>("PickRmrk")
                        .HasColumnType("text");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("Ref2")
                        .HasColumnType("text");

                    b.Property<string>("Rounding")
                        .HasColumnType("text");

                    b.Property<string>("ShipToOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("StampNum")
                        .HasColumnType("text");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<string>("SummryType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("TotalExpSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalExpns")
                        .HasColumnType("numeric");

                    b.Property<int?>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_ACID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FMST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<string>("UseBilAddr")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("DocEntry");

                    b.ToTable("OPDN_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OPLN", b =>
                {
                    b.Property<int>("ListNum")
                        .HasColumnType("integer");

                    b.Property<int?>("BASE_NUM")
                        .HasColumnType("integer");

                    b.Property<string>("ListName")
                        .HasColumnType("text");

                    b.Property<int?>("SPPCounter")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.HasKey("ListNum");

                    b.ToTable("OPLN_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OPOR", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<DateTime?>("AssetDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("AtcEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("BPChCntc")
                        .HasColumnType("integer");

                    b.Property<string>("BPNameOW")
                        .HasColumnType("text");

                    b.Property<string>("CANCELED")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSumSy")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocManClsd")
                        .HasColumnType("text");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<string>("DocStatus")
                        .HasColumnType("text");

                    b.Property<int?>("DocTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<string>("DocType")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExpAppl")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExpApplSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("ExtraDays")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtraMonth")
                        .HasColumnType("integer");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("GroupNum")
                        .HasColumnType("integer");

                    b.Property<int?>("ImportEnt")
                        .HasColumnType("integer");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<int?>("LangCode")
                        .HasColumnType("integer");

                    b.Property<string>("LetterNum")
                        .HasColumnType("text");

                    b.Property<string>("LicTradNum")
                        .HasColumnType("text");

                    b.Property<int?>("LndCstNum")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Notify")
                        .HasColumnType("text");

                    b.Property<string>("NumAtCard")
                        .HasColumnType("text");

                    b.Property<decimal?>("PaidSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidToDate")
                        .HasColumnType("numeric");

                    b.Property<string>("PartSupply")
                        .HasColumnType("text");

                    b.Property<string>("PayDuMonth")
                        .HasColumnType("text");

                    b.Property<string>("PayToCode")
                        .HasColumnType("text");

                    b.Property<string>("PaymentRef")
                        .HasColumnType("text");

                    b.Property<string>("PeyMethod")
                        .HasColumnType("text");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("Ref2")
                        .HasColumnType("text");

                    b.Property<string>("Rounding")
                        .HasColumnType("text");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("StampNum")
                        .HasColumnType("text");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("TotalExpSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalExpns")
                        .HasColumnType("numeric");

                    b.Property<string>("U_CXS_ACID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FMST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<string>("UseBilAddr")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("DocEntry");

                    b.ToTable("OPOR_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.ORIN", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("BPNameOW")
                        .HasColumnType("text");

                    b.Property<string>("CANCELED")
                        .HasColumnType("text");

                    b.Property<string>("CEECFlag")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<string>("DocStatus")
                        .HasColumnType("text");

                    b.Property<int?>("DocTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("FatherCard")
                        .HasColumnType("text");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Footer")
                        .HasColumnType("text");

                    b.Property<decimal?>("GrosProfSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrosProfit")
                        .HasColumnType("numeric");

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<string>("LastPmnTyp")
                        .HasColumnType("text");

                    b.Property<string>("LicTradNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("NumAtCard")
                        .HasColumnType("text");

                    b.Property<decimal?>("PaidSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidSumSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidToDate")
                        .HasColumnType("numeric");

                    b.Property<string>("PayToCode")
                        .HasColumnType("text");

                    b.Property<string>("PeyMethod")
                        .HasColumnType("text");

                    b.Property<string>("PickRmrk")
                        .HasColumnType("text");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<int?>("ReceiptNum")
                        .HasColumnType("integer");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("ShipToCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TrackNo")
                        .HasColumnType("text");

                    b.Property<int?>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_ACID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_BREF")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FMST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FRST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_SLEX")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_SNGL")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<string>("UseBilAddr")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("DocEntry");

                    b.ToTable("ORIN_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.ORPD", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BPNameOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("BaseDiscPr")
                        .HasColumnType("numeric");

                    b.Property<string>("CANCELED")
                        .HasColumnType("text");

                    b.Property<string>("CEECFlag")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DiscSumSy")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<string>("DocStatus")
                        .HasColumnType("text");

                    b.Property<int?>("DocTime")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<int?>("ExtraDays")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtraMonth")
                        .HasColumnType("integer");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Footer")
                        .HasColumnType("text");

                    b.Property<decimal?>("GrosProfFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrosProfSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrosProfit")
                        .HasColumnType("numeric");

                    b.Property<int?>("GroupNum")
                        .HasColumnType("integer");

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Notify")
                        .HasColumnType("text");

                    b.Property<string>("NumAtCard")
                        .HasColumnType("text");

                    b.Property<decimal?>("PaidSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PaidToDate")
                        .HasColumnType("numeric");

                    b.Property<string>("PayDuMonth")
                        .HasColumnType("text");

                    b.Property<string>("PayToCode")
                        .HasColumnType("text");

                    b.Property<string>("PeyMethod")
                        .HasColumnType("text");

                    b.Property<string>("PickRmrk")
                        .HasColumnType("text");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("ReopManCls")
                        .HasColumnType("text");

                    b.Property<string>("ReopOriDoc")
                        .HasColumnType("text");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<string>("SummryType")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("TotalExpSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TotalExpns")
                        .HasColumnType("numeric");

                    b.Property<int?>("TransId")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_ACID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FMST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TRKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_Freight")
                        .HasColumnType("numeric");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<string>("UseBilAddr")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign2")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("DocEntry");

                    b.ToTable("ORPD_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OUGP", b =>
                {
                    b.Property<int>("UgpEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseUom")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("Locked")
                        .HasColumnType("text");

                    b.Property<string>("UgpCode")
                        .HasColumnType("text");

                    b.Property<string>("UgpName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<short?>("UserSign2")
                        .HasColumnType("smallint");

                    b.HasKey("UgpEntry");

                    b.ToTable("OUGP_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OUOM", b =>
                {
                    b.Property<int>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("IntSymbol")
                        .HasColumnType("text");

                    b.Property<string>("Locked")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomName")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<short?>("UserSign")
                        .HasColumnType("smallint");

                    b.Property<short?>("UserSign2")
                        .HasColumnType("smallint");

                    b.HasKey("UomEntry");

                    b.ToTable("OUOM_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OWHS", b =>
                {
                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("ARCMAct")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("BalInvntAc")
                        .HasColumnType("text");

                    b.Property<string>("BalanceAcc")
                        .HasColumnType("text");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<string>("DecreasAc")
                        .HasColumnType("text");

                    b.Property<string>("ExpClrAct")
                        .HasColumnType("text");

                    b.Property<string>("ExpensesAc")
                        .HasColumnType("text");

                    b.Property<string>("Inactive")
                        .HasColumnType("text");

                    b.Property<string>("IncreasAc")
                        .HasColumnType("text");

                    b.Property<int?>("Location")
                        .HasColumnType("integer");

                    b.Property<string>("NegStckAct")
                        .HasColumnType("text");

                    b.Property<string>("PriceDifAc")
                        .HasColumnType("text");

                    b.Property<string>("ReturnAc")
                        .HasColumnType("text");

                    b.Property<string>("RevenuesAc")
                        .HasColumnType("text");

                    b.Property<string>("SaleCostAc")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("TaxOffice")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ACNO")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_BRCD")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_CACT")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_CONT")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_FCFC")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_HID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_INST")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_ISID")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STAC")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STFC")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_STRE")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TVAC")
                        .HasColumnType("text");

                    b.Property<string>("U_CXS_TVHD")
                        .HasColumnType("text");

                    b.Property<string>("U_CustomGroup")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF1")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF2")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF3")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF4")
                        .HasColumnType("text");

                    b.Property<string>("U_UDF5")
                        .HasColumnType("text");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.Property<string>("VarianceAc")
                        .HasColumnType("text");

                    b.Property<string>("WhsName")
                        .HasColumnType("text");

                    b.Property<string>("WipAcct")
                        .HasColumnType("text");

                    b.Property<DateTime?>("createDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("intrnalKey")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("updateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("userSign2")
                        .HasColumnType("integer");

                    b.HasKey("WhsCode");

                    b.ToTable("OWHS_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.OWTR", b =>
                {
                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("CANCELED")
                        .HasColumnType("text");

                    b.Property<string>("CardCode")
                        .HasColumnType("text");

                    b.Property<string>("CardName")
                        .HasColumnType("text");

                    b.Property<int?>("CntctCode")
                        .HasColumnType("integer");

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTS")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtActTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("CtActTaxSC")
                        .HasColumnType("numeric");

                    b.Property<string>("CtlAccount")
                        .HasColumnType("text");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DataVers")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DocDueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DocNum")
                        .HasColumnType("integer");

                    b.Property<decimal?>("DocRate")
                        .HasColumnType("numeric");

                    b.Property<string>("DocStatus")
                        .HasColumnType("text");

                    b.Property<short?>("DocTime")
                        .HasColumnType("smallint");

                    b.Property<decimal?>("DocTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DocTotalSy")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DpmAmntFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExepCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Filler")
                        .HasColumnType("text");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<decimal?>("FoCFrght")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("FoCFrghtSC")
                        .HasColumnType("numeric");

                    b.Property<string>("Footer")
                        .HasColumnType("text");

                    b.Property<short?>("GroupNum")
                        .HasColumnType("smallint");

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<string>("JrnlMemo")
                        .HasColumnType("text");

                    b.Property<decimal?>("Max1099")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuAmnt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NnSbCuSC")
                        .HasColumnType("numeric");

                    b.Property<string>("PayToCode")
                        .HasColumnType("text");

                    b.Property<string>("PickRmrk")
                        .HasColumnType("text");

                    b.Property<string>("Printed")
                        .HasColumnType("text");

                    b.Property<string>("Ref1")
                        .HasColumnType("text");

                    b.Property<string>("Ref2")
                        .HasColumnType("text");

                    b.Property<string>("ShipToCode")
                        .HasColumnType("text");

                    b.Property<int?>("SlpCode")
                        .HasColumnType("integer");

                    b.Property<decimal?>("SplitTax")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxFC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SplitTaxSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SrvGpPrcnt")
                        .HasColumnType("numeric");

                    b.Property<int?>("StationID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("TaxDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ToBinCode")
                        .HasColumnType("text");

                    b.Property<string>("ToWhsCode")
                        .HasColumnType("text");

                    b.Property<int?>("TransId")
                        .HasColumnType("integer");

                    b.Property<short?>("TrnspCode")
                        .HasColumnType("smallint");

                    b.Property<string>("U_PO")
                        .HasColumnType("text");

                    b.Property<string>("U_STOREREFNO")
                        .HasColumnType("text");

                    b.Property<string>("U_goodreturnsrn")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTS")
                        .HasColumnType("integer");

                    b.Property<short?>("UserSign")
                        .HasColumnType("smallint");

                    b.Property<short?>("UserSign2")
                        .HasColumnType("smallint");

                    b.Property<string>("VATFirst")
                        .HasColumnType("text");

                    b.Property<int?>("VatJENum")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNum")
                        .HasColumnType("text");

                    b.Property<int?>("draftKey")
                        .HasColumnType("integer");

                    b.HasKey("DocEntry");

                    b.ToTable("OWTR_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.PDN1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcctCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ActDelDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal?>("AssblValue")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseAtCard")
                        .HasColumnType("text");

                    b.Property<string>("BaseCard")
                        .HasColumnType("text");

                    b.Property<int?>("BaseDocNum")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseLine")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BaseOpnQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<int?>("BaseType")
                        .HasColumnType("integer");

                    b.Property<int?>("CESTCode")
                        .HasColumnType("integer");

                    b.Property<string>("CUSplit")
                        .HasColumnType("text");

                    b.Property<string>("ChgAsmBoMW")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<string>("CogsAcct")
                        .HasColumnType("text");

                    b.Property<int?>("CommClass")
                        .HasColumnType("integer");

                    b.Property<string>("ConsumeFCT")
                        .HasColumnType("text");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DefBreak")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DelivrdQty")
                        .HasColumnType("numeric");

                    b.Property<string>("DescOW")
                        .HasColumnType("text");

                    b.Property<string>("DetailsOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("DistribIS")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor3")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor4")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<int?>("Flags")
                        .HasColumnType("integer");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<string>("FreeTxt")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotalSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Height1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Hght1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("Incoterms")
                        .HasColumnType("integer");

                    b.Property<string>("IndEscala")
                        .HasColumnType("text");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("LineNum")
                        .HasColumnType("integer");

                    b.Property<string>("LinePoPrss")
                        .HasColumnType("text");

                    b.Property<string>("LineStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("LineVendor")
                        .HasColumnType("text");

                    b.Property<int?>("NCMCode")
                        .HasColumnType("integer");

                    b.Property<string>("NeedQty")
                        .HasColumnType("text");

                    b.Property<decimal?>("NumPerMsr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumPerMsr2")
                        .HasColumnType("numeric");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OrderedQty")
                        .HasColumnType("numeric");

                    b.Property<string>("OrigItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("PQTReqQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PackQty")
                        .HasColumnType("numeric");

                    b.Property<string>("PartRetire")
                        .HasColumnType("text");

                    b.Property<int?>("PoLineNum")
                        .HasColumnType("integer");

                    b.Property<string>("PoTrgEntry")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceAfVAT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("QtyToShip")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RetireQty")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReturnAct")
                        .HasColumnType("integer");

                    b.Property<string>("SWW")
                        .HasColumnType("text");

                    b.Property<string>("SerialNum")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ShipToDesc")
                        .HasColumnType("text");

                    b.Property<decimal?>("Shortages")
                        .HasColumnType("numeric");

                    b.Property<string>("SpecPrice")
                        .HasColumnType("text");

                    b.Property<decimal?>("StckAppSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StckSumApp")
                        .HasColumnType("numeric");

                    b.Property<int?>("StdItemId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StockSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSumSc")
                        .HasColumnType("numeric");

                    b.Property<string>("SubCatNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Surpluses")
                        .HasColumnType("numeric");

                    b.Property<int?>("TargetType")
                        .HasColumnType("integer");

                    b.Property<string>("TaxAmtSrc")
                        .HasColumnType("text");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<string>("TaxStatus")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("ThirdParty")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<int?>("TransMod")
                        .HasColumnType("integer");

                    b.Property<string>("TreeType")
                        .HasColumnType("text");

                    b.Property<int?>("TrgetEntry")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_RGCD")
                        .HasColumnType("text");

                    b.Property<string>("U_Expired")
                        .HasColumnType("text");

                    b.Property<string>("U_MYANAMRLABEL")
                        .HasColumnType("text");

                    b.Property<string>("U_Price")
                        .HasColumnType("text");

                    b.Property<string>("U_Qty")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_U_Negative")
                        .HasColumnType("numeric");

                    b.Property<string>("U_Unit")
                        .HasColumnType("text");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("UomEntry2")
                        .HasColumnType("integer");

                    b.Property<string>("VatGrpSrc")
                        .HasColumnType("text");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("VolUnit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Weight1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Wght1Unit")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("WtCalced")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr2")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("PDN1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.POR1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcctCode")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal?>("AssblValue")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseCard")
                        .HasColumnType("text");

                    b.Property<decimal?>("BaseOpnQty")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<int?>("CESTCode")
                        .HasColumnType("integer");

                    b.Property<string>("CUSplit")
                        .HasColumnType("text");

                    b.Property<string>("ChgAsmBoMW")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<string>("CogsAcct")
                        .HasColumnType("text");

                    b.Property<int?>("CommClass")
                        .HasColumnType("integer");

                    b.Property<string>("ConsumeFCT")
                        .HasColumnType("text");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DefBreak")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DelivrdQty")
                        .HasColumnType("numeric");

                    b.Property<string>("DescOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("DistribIS")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor1")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor2")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor3")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Factor4")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<int?>("Flags")
                        .HasColumnType("integer");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<string>("FreeTxt")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotalSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Height1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Hght1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("Incoterms")
                        .HasColumnType("integer");

                    b.Property<string>("IndEscala")
                        .HasColumnType("text");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("LinManClsd")
                        .HasColumnType("text");

                    b.Property<int>("LineNum")
                        .HasColumnType("integer");

                    b.Property<string>("LinePoPrss")
                        .HasColumnType("text");

                    b.Property<string>("LineStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("LineVendor")
                        .HasColumnType("text");

                    b.Property<int?>("NCMCode")
                        .HasColumnType("integer");

                    b.Property<string>("NeedQty")
                        .HasColumnType("text");

                    b.Property<decimal?>("NumPerMsr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NumPerMsr2")
                        .HasColumnType("numeric");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OrderedQty")
                        .HasColumnType("numeric");

                    b.Property<string>("OrigItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("PQTReqQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PackQty")
                        .HasColumnType("numeric");

                    b.Property<string>("PartRetire")
                        .HasColumnType("text");

                    b.Property<string>("PoTrgEntry")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceAfVAT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("QtyToShip")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RetireQty")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReturnAct")
                        .HasColumnType("integer");

                    b.Property<string>("SWW")
                        .HasColumnType("text");

                    b.Property<string>("SerialNum")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ShipToDesc")
                        .HasColumnType("text");

                    b.Property<decimal?>("Shortages")
                        .HasColumnType("numeric");

                    b.Property<string>("SpecPrice")
                        .HasColumnType("text");

                    b.Property<int?>("StdItemId")
                        .HasColumnType("integer");

                    b.Property<string>("SubCatNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Surpluses")
                        .HasColumnType("numeric");

                    b.Property<int?>("TargetType")
                        .HasColumnType("integer");

                    b.Property<string>("TaxAmtSrc")
                        .HasColumnType("text");

                    b.Property<string>("TaxCode")
                        .HasColumnType("text");

                    b.Property<string>("TaxStatus")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("ThirdParty")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<int?>("TransMod")
                        .HasColumnType("integer");

                    b.Property<string>("TreeType")
                        .HasColumnType("text");

                    b.Property<int?>("TrgetEntry")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_RGCD")
                        .HasColumnType("text");

                    b.Property<string>("U_Expired")
                        .HasColumnType("text");

                    b.Property<string>("U_MYANAMRLABEL")
                        .HasColumnType("text");

                    b.Property<string>("U_Price")
                        .HasColumnType("text");

                    b.Property<string>("U_Qty")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_U_Negative")
                        .HasColumnType("numeric");

                    b.Property<string>("U_Unit")
                        .HasColumnType("text");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("UomEntry2")
                        .HasColumnType("integer");

                    b.Property<string>("VatGrpSrc")
                        .HasColumnType("text");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<int?>("VolUnit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Weight1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Wght1Unit")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("WtCalced")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr2")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("POR1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.RIN1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcctCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ActDelDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BaseCard")
                        .HasColumnType("text");

                    b.Property<int?>("BaseDocNum")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseLine")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BaseOpnQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<int?>("BaseType")
                        .HasColumnType("integer");

                    b.Property<int?>("CESTCode")
                        .HasColumnType("integer");

                    b.Property<string>("ChgAsmBoMW")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<string>("CogsAcct")
                        .HasColumnType("text");

                    b.Property<int?>("CommClass")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("DescOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("DistribExp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<string>("FreeTxt")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GPTtlBasPr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotalSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrossBuyPr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrssProfSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GrssProfit")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("LineNum")
                        .HasColumnType("integer");

                    b.Property<string>("LineStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("LineVendor")
                        .HasColumnType("text");

                    b.Property<decimal?>("NumPerMsr")
                        .HasColumnType("numeric");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PackQty")
                        .HasColumnType("numeric");

                    b.Property<string>("PoTrgEntry")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceAfVAT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReturnAct")
                        .HasColumnType("integer");

                    b.Property<string>("SWW")
                        .HasColumnType("text");

                    b.Property<string>("ShipToCode")
                        .HasColumnType("text");

                    b.Property<string>("ShipToDesc")
                        .HasColumnType("text");

                    b.Property<int?>("SlpCode")
                        .HasColumnType("integer");

                    b.Property<string>("SpecPrice")
                        .HasColumnType("text");

                    b.Property<int?>("StdItemId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StockPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSumSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockValue")
                        .HasColumnType("numeric");

                    b.Property<string>("SubCatNum")
                        .HasColumnType("text");

                    b.Property<int?>("TargetType")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<string>("TreeType")
                        .HasColumnType("text");

                    b.Property<int?>("TrgetEntry")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_TDKY")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_U_Negative")
                        .HasColumnType("numeric");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("UomEntry2")
                        .HasColumnType("integer");

                    b.Property<string>("UseBaseUn")
                        .HasColumnType("text");

                    b.Property<string>("VatGrpSrc")
                        .HasColumnType("text");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Weight1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Wght1Unit")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr2")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("RIN1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.RPD1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AcctCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ActDelDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("BaseAtCard")
                        .HasColumnType("text");

                    b.Property<string>("BaseCard")
                        .HasColumnType("text");

                    b.Property<int?>("BaseDocNum")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseLine")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BaseOpnQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<int?>("BaseType")
                        .HasColumnType("integer");

                    b.Property<int?>("CESTCode")
                        .HasColumnType("integer");

                    b.Property<string>("CUSplit")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<string>("CogsAcct")
                        .HasColumnType("text");

                    b.Property<int?>("CommClass")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DefBreak")
                        .HasColumnType("numeric");

                    b.Property<string>("DescOW")
                        .HasColumnType("text");

                    b.Property<string>("DetailsOW")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("DistribIS")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<string>("FreeTxt")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("GTotalSC")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Height1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Hght1Unit")
                        .HasColumnType("integer");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("Incoterms")
                        .HasColumnType("integer");

                    b.Property<string>("IndEscala")
                        .HasColumnType("text");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvntSttus")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<int?>("LineNum")
                        .HasColumnType("integer");

                    b.Property<string>("LineStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<string>("LineVendor")
                        .HasColumnType("text");

                    b.Property<int?>("NCMCode")
                        .HasColumnType("integer");

                    b.Property<string>("NeedQty")
                        .HasColumnType("text");

                    b.Property<decimal?>("NumPerMsr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<string>("OrigItem")
                        .HasColumnType("text");

                    b.Property<decimal?>("PackQty")
                        .HasColumnType("numeric");

                    b.Property<string>("PoTrgEntry")
                        .HasColumnType("text");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceAfVAT")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<int?>("ReturnAct")
                        .HasColumnType("integer");

                    b.Property<string>("SWW")
                        .HasColumnType("text");

                    b.Property<string>("SerialNum")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal?>("Shortages")
                        .HasColumnType("numeric");

                    b.Property<string>("SpecPrice")
                        .HasColumnType("text");

                    b.Property<decimal?>("StckAppSc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StckSumApp")
                        .HasColumnType("numeric");

                    b.Property<int?>("StdItemId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("StockSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("StockSumSc")
                        .HasColumnType("numeric");

                    b.Property<string>("SubCatNum")
                        .HasColumnType("text");

                    b.Property<decimal?>("Surpluses")
                        .HasColumnType("numeric");

                    b.Property<int?>("TargetType")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<int?>("TransMod")
                        .HasColumnType("integer");

                    b.Property<int?>("TrgetEntry")
                        .HasColumnType("integer");

                    b.Property<string>("U_CXS_RGCD")
                        .HasColumnType("text");

                    b.Property<string>("U_Expired")
                        .HasColumnType("text");

                    b.Property<decimal?>("U_U_Negative")
                        .HasColumnType("numeric");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("UomEntry2")
                        .HasColumnType("integer");

                    b.Property<string>("VatGrpSrc")
                        .HasColumnType("text");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Volume")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Weight1")
                        .HasColumnType("numeric");

                    b.Property<int?>("Wght1Unit")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("WtCalced")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr2")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("RPD1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.UGP1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<decimal?>("AltQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric");

                    b.Property<int?>("LineNum")
                        .HasColumnType("integer");

                    b.Property<int>("UgpEntry")
                        .HasColumnType("integer");

                    b.Property<int>("UomEntry")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("UGP1_NEW", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.VGOPBP", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Canceled")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("CreateTime")
                        .HasColumnType("integer");

                    b.Property<string>("DataSource")
                        .HasColumnType("text");

                    b.Property<int?>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("LogInst")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<string>("Transfered")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("UpdateTime")
                        .HasColumnType("integer");

                    b.Property<int?>("UserSign")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("VGOPBP", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.VGPBP1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int?>("LineId")
                        .HasColumnType("integer");

                    b.Property<int?>("LogInst")
                        .HasColumnType("integer");

                    b.Property<string>("Object")
                        .HasColumnType("text");

                    b.Property<string>("U_ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("U_Myanmarlabel")
                        .HasColumnType("text");

                    b.Property<string>("U_Pomaxday")
                        .HasColumnType("text");

                    b.Property<string>("U_Pominday")
                        .HasColumnType("text");

                    b.Property<string>("U_Poschedule")
                        .HasColumnType("text");

                    b.Property<string>("U_Remark")
                        .HasColumnType("text");

                    b.Property<string>("U_Vendorcode")
                        .HasColumnType("text");

                    b.Property<string>("U_Vendorname")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("VGPBP1", "sapdata");
                });

            modelBuilder.Entity("HANAtoPostgreSyncApp.Models.WTR1", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("AllocBinC")
                        .HasColumnType("text");

                    b.Property<string>("BaseCard")
                        .HasColumnType("text");

                    b.Property<int?>("BaseEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("BaseLine")
                        .HasColumnType("integer");

                    b.Property<decimal?>("BaseOpnQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BaseQty")
                        .HasColumnType("numeric");

                    b.Property<string>("BaseRef")
                        .HasColumnType("text");

                    b.Property<int?>("BaseType")
                        .HasColumnType("integer");

                    b.Property<string>("ChgAsmBoMW")
                        .HasColumnType("text");

                    b.Property<string>("CodeBars")
                        .HasColumnType("text");

                    b.Property<decimal?>("CtrSealQty")
                        .HasColumnType("numeric");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<decimal?>("DiscPrcnt")
                        .HasColumnType("numeric");

                    b.Property<string>("DistribExp")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DocDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DocEntry")
                        .HasColumnType("integer");

                    b.Property<string>("Dscription")
                        .HasColumnType("text");

                    b.Property<string>("Excisable")
                        .HasColumnType("text");

                    b.Property<decimal?>("ExtTaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumF")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ExtTaxSumS")
                        .HasColumnType("numeric");

                    b.Property<int?>("FinncPriod")
                        .HasColumnType("integer");

                    b.Property<string>("FisrtBin")
                        .HasColumnType("text");

                    b.Property<string>("FreeChrgBP")
                        .HasColumnType("text");

                    b.Property<string>("FromWhsCod")
                        .HasColumnType("text");

                    b.Property<decimal?>("GPBefDisc")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("INMPrice")
                        .HasColumnType("numeric");

                    b.Property<int?>("Incoterms")
                        .HasColumnType("integer");

                    b.Property<decimal?>("InvQty")
                        .HasColumnType("numeric");

                    b.Property<string>("InvQtyOnly")
                        .HasColumnType("text");

                    b.Property<string>("ItemCode")
                        .HasColumnType("text");

                    b.Property<string>("ItmTaxType")
                        .HasColumnType("text");

                    b.Property<int>("LineNum")
                        .HasColumnType("integer");

                    b.Property<string>("LineStatus")
                        .HasColumnType("text");

                    b.Property<decimal?>("LineTotal")
                        .HasColumnType("numeric");

                    b.Property<int?>("NCMCode")
                        .HasColumnType("integer");

                    b.Property<decimal?>("NumPerMsr2")
                        .HasColumnType("numeric");

                    b.Property<string>("OcrCode")
                        .HasColumnType("text");

                    b.Property<decimal?>("OpenCreQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenInvQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenQty")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("OpenSumSys")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Price")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PriceBefDi")
                        .HasColumnType("numeric");

                    b.Property<string>("Project")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("ShipDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SpecPrice")
                        .HasColumnType("text");

                    b.Property<decimal?>("StockPrice")
                        .HasColumnType("numeric");

                    b.Property<string>("TaxOnly")
                        .HasColumnType("text");

                    b.Property<string>("TaxType")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<decimal?>("TotalSumSy")
                        .HasColumnType("numeric");

                    b.Property<int?>("TransMod")
                        .HasColumnType("integer");

                    b.Property<short?>("TrnsCode")
                        .HasColumnType("smallint");

                    b.Property<string>("U_remark35")
                        .HasColumnType("text");

                    b.Property<string>("UomCode")
                        .HasColumnType("text");

                    b.Property<string>("UomCode2")
                        .HasColumnType("text");

                    b.Property<int?>("UomEntry")
                        .HasColumnType("integer");

                    b.Property<int?>("UomEntry2")
                        .HasColumnType("integer");

                    b.Property<string>("UseBaseUn")
                        .HasColumnType("text");

                    b.Property<string>("VendorNum")
                        .HasColumnType("text");

                    b.Property<int?>("VisOrder")
                        .HasColumnType("integer");

                    b.Property<string>("WhsCode")
                        .HasColumnType("text");

                    b.Property<string>("WtLiable")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr")
                        .HasColumnType("text");

                    b.Property<string>("unitMsr2")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("WTR1_NEW", "sapdata");
                });
#pragma warning restore 612, 618
        }
    }
}
